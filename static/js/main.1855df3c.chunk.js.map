{"version":3,"sources":["Components/Modal/Modal.module.css","Components/ToDoForm/ToDoForm.js","Components/Container/Container.js","Components/Navigation/Navigation.js","Components/Filter/filter.js","Components/Modal/Modal.js","App.js","hooks/useToggle.js","index.js"],"names":["module","exports","ToDoForm","onSubmit","toggleModal","takeTodo","todoId","uuid","todoChek","todoCheckImp","useState","inputTodo","setInputTodo","checkedTodo","setCheckedTodo","checkedImp","setCheckedImp","todo","importantTodo","text","importance","id","notImportantTodo","handleChecChange","e","target","name","className","preventDefault","alert","htmlFor","type","value","placeholder","onChange","currentTarget","toLowerCase","checked","Container","children","title","Navigation","exact","to","activeclassname","Filter","inputFilter","inputFilterId","autoComplete","Modal","useEffect","window","addEventListener","handleEsc","removeEventListener","code","modal__backDrop","styles","modal__content","createPortal","onClick","document","getElementById","ImportantToDosList","lazy","ToDosList","ComletedTodosList","App","initValue","state","setState","prev","useToggle","showModal","setShowModal","setInputFilter","JSON","parse","localStorage","getItem","iTodos","setITodos","todos","setTodos","cTodos","setCTodos","defaultTodos","setDefaultTodos","deleteTodo","filter","removeToCompleted","getFilteredTD","arrayOfTodos","filteredInputSearch","includes","setItem","stringify","prevTodos","fallback","path","element","removeTodo","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1855df3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__backDrop\":\"Modal_modal__backDrop__35Wef\",\"modal__content\":\"Modal_modal__content__e6_ry\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuid } from \"uuid\";\n\nexport default function ToDoForm({ onSubmit, toggleModal, takeTodo }) {\n  const todoId = uuid();\n  const todoChek = uuid();\n  const todoCheckImp = uuid();\n  const [inputTodo, setInputTodo] = useState(\"\");\n  const [checkedTodo, setCheckedTodo] = useState(true);\n  const [checkedImp, setCheckedImp] = useState(false);\n  const todo = {\n    importantTodo: {\n      text: inputTodo,\n      importance: \"high\",\n      id: uuid(),\n    },\n    notImportantTodo: {\n      text: inputTodo,\n      importance: \"low\",\n      id: uuid(),\n    },\n  };\n\n  const handleChange = (e) => {\n    setInputTodo(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleChecChange = (e) => {\n    switch (e.target.name) {\n      case \"important\":\n        setCheckedImp(!checkedImp);\n        setCheckedTodo(checkedImp);\n        break;\n      case \"notImportant\":\n        setCheckedTodo(!checkedTodo);\n        setCheckedImp(checkedTodo);\n        break;\n      default:\n        return \"lol\";\n    }\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    const { importantTodo, notImportantTodo } = todo;\n\n    switch (checkedTodo) {\n      case false:\n        onSubmit(importantTodo);\n        takeTodo(importantTodo);\n        setInputTodo(\"\");\n        toggleModal();\n        break;\n      case true:\n        onSubmit(notImportantTodo);\n        takeTodo(notImportantTodo);\n        setInputTodo(\"\");\n        toggleModal();\n        break;\n      default:\n        alert(\"in progress...\");\n    }\n  };\n\n  /* ---------------------------Вариант с кнопками---------------------------- */\n  // const onBtnsClick = (e) => {\n  //   e.preventDefault();\n  //   const { importantTodo, notImportantTodo } = todo;\n\n  //   switch (e.target.name) {\n  //     case \"important\":\n  //       onSubmit(importantTodo);\n  //       takeTodo(importantTodo);\n  //       setInputTodo(\"\");\n  //       toggleModal();\n  //       break;\n  //     case \"notImportant\":\n  //       onSubmit(notImportantTodo);\n  //       takeTodo(notImportantTodo);\n  //       setInputTodo(\"\");\n  //       toggleModal();\n  //       break;\n  //     default:\n  //       alert(\"in progress...\");\n  //   }\n  // };\n\n  return (\n    <form className=\"form\" onSubmit={onFormSubmit}>\n      <label className=\"form__label\" htmlFor={todoId}></label>\n      <input\n        id={todoId}\n        className=\"todo__input\"\n        type=\"text\"\n        value={inputTodo}\n        placeholder=\"write a task\"\n        onChange={handleChange}\n      ></input>\n\n      <label htmlFor={todoChek} className=\"checkImpLabel\">\n        Todo\n      </label>\n      <input\n        type=\"checkbox\"\n        name=\"notImportant\"\n        value=\"important\"\n        id={todoChek}\n        checked={checkedTodo}\n        onChange={handleChecChange}\n      />\n\n      <label htmlFor={todoCheckImp} className=\"checkImpLabel\">\n        Important Todo!\n      </label>\n      <input\n        type=\"checkbox\"\n        name=\"important\"\n        value=\"notImportatnt\"\n        id={todoCheckImp}\n        checked={checkedImp}\n        onChange={handleChecChange}\n      />\n\n      {/* <button\n        type=\"button\"\n        name=\"important\"\n        className=\"btnImportant\"\n        onClick={onBtnsClick}\n      >\n        Important tasks\n      </button>\n      <button\n        type=\"button\"\n        name=\"notImportant\"\n        className=\"btnSoso\"\n        onClick={onBtnsClick}\n      >\n        Not importatnt tasks\n      </button> */}\n      <button type=\"submit\">Add todo</button>\n    </form>\n  );\n}\n\nToDoForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","export default function Container({ children, title }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import { NavLink } from \"react-router-dom\";\n\nexport default function Navigation() {\n  return (\n    <nav>\n      <NavLink\n        exact=\"true\"\n        to=\"/\"\n        className=\"link\"\n        activeclassname=\"active__link\"\n      >\n        Important todos\n      </NavLink>\n      <NavLink\n        exact=\"true\"\n        to=\"/daily\"\n        className=\"link\"\n        activeclassname=\"active__link\"\n      >\n        Daily todos\n      </NavLink>\n      <NavLink\n        exact=\"true\"\n        to=\"/completed\"\n        className=\"link\"\n        activeclassname=\"active__link\"\n      >\n        Completed todos\n      </NavLink>\n    </nav>\n  );\n}\n","import { v4 as uuid } from \"uuid\";\n\nexport default function Filter({ inputFilter, onChange }) {\n  const inputFilterId = uuid();\n\n  return (\n    <div className=\"filter\">\n      <h3 className=\"filter__title\">Filter todos by content</h3>\n      <label className=\"filter__label\" htmlFor={inputFilterId}>\n        <input\n          id={inputFilterId}\n          type=\"text\"\n          value={inputFilter}\n          autoComplete=\"off\"\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./Modal.module.css\";\n\nexport default function Modal({ children, toggleModal }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleEsc);\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  });\n\n  const handleEsc = (e) => {\n    let condition = e.code === \"Escape\";\n    if (condition) {\n      toggleModal();\n    }\n  };\n\n  const handleClose = (e) => {\n    if (e.currentTarget === e.target) toggleModal();\n  };\n\n  const onClickCloseBtn = () => {\n    toggleModal();\n  };\n\n  const { modal__backDrop, modal__content } = styles;\n  return createPortal(\n    <div className={modal__backDrop} onClick={handleClose}>\n      <div className={modal__content}>{children}</div>\n      <button type=\"button\" onClick={onClickCloseBtn}>\n        close modal\n      </button>\n    </div>,\n\n    document.getElementById(\"modalRoot\")\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { lazy, Suspense } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { useToggle } from \"./hooks/useToggle\";\nimport ToDoForm from \"./Components/ToDoForm\";\nimport Container from \"./Components/Container\";\nimport Navigation from \"./Components/Navigation\";\nimport Filter from \"./Components/Filter\";\nimport Modal from \"./Components/Modal\";\n// import ToDosList from \"./Components/ToDosList\";\n// import ImportantToDosList from \"./Components/ImportantTodoList/ImportantTodoList\";\n// import ComletedTodosList from \"./Components/CompletedTodosList\";\n\nconst ImportantToDosList = lazy(() =>\n  import(\n    \"./Components/ImportantTodoList\" /* webpackChunkName: \"ImportantTodos\" */\n  )\n);\nconst ToDosList = lazy(() =>\n  import(\"./Components/ToDosList\" /* webpackChunkName: \"ToDosList\" */)\n);\nconst ComletedTodosList = lazy(() =>\n  import(\n    \"./Components/CompletedTodosList\" /* webpackChunkName: \"CompletedTodos\" */\n  )\n);\n\nexport default function App() {\n  /* -------------------------------------------state-------------------------------------------------- */\n  const [showModal, setShowModal] = useToggle(false);\n  const [inputFilter, setInputFilter] = useState(\"\");\n  const [iTodos, setITodos] = useState(\n    () => JSON.parse(window.localStorage.getItem(\"iTodos\")) ?? []\n  );\n  const [todos, setTodos] = useState(\n    () => JSON.parse(window.localStorage.getItem(\"todos\")) ?? []\n  );\n  const [cTodos, setCTodos] = useState(\n    () => JSON.parse(window.localStorage.getItem(\"cTodos\")) ?? []\n  );\n  const [defaultTodos, setDefaultTodos] = useState(\n    () => JSON.parse(window.localStorage.getItem(\"defaultTodos\")) ?? []\n  );\n\n  /*---------------------------------------------metods------------------------------------------------------ */\n  const onSubmit = (todo) => {\n    switch (todo.importance) {\n      case \"high\":\n        setITodos((prev) => [todo, ...prev]);\n        break;\n      case \"low\":\n        setTodos((prevTodos) => [todo, ...prevTodos]);\n        break;\n      default:\n        return \"not bad\";\n    }\n  };\n  const takeDefaultTodo = (todo) => {\n    setDefaultTodos((prev) => [todo, ...prev]);\n  };\n  const deleteTodo = (todoId) => {\n    setTodos(todos.filter((todo) => todoId !== todo.id));\n    setITodos(iTodos.filter((todo) => todoId !== todo.id));\n    setCTodos(cTodos.filter((todo) => todoId !== todo.id));\n    setDefaultTodos(defaultTodos.filter((todo) => todoId !== todo.id));\n  };\n  const removeToCompleted = (todoId) => {\n    setTodos(todos.filter((todo) => todoId !== todo.id));\n    setITodos(iTodos.filter((todo) => todoId !== todo.id));\n    setCTodos((prev) => [\n      defaultTodos.filter((todo) => todoId === todo.id)[0],\n      ...prev,\n    ]);\n  };\n  const onFilterSearch = (e) => {\n    setInputFilter(e.currentTarget.value);\n  };\n  const getFilteredTD = (arrayOfTodos) => {\n    const filteredInputSearch = inputFilter.toLowerCase();\n    return arrayOfTodos.filter((todo) =>\n      todo.text.toLowerCase().includes(filteredInputSearch)\n    );\n  };\n  useEffect(() => {\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n    window.localStorage.setItem(\"iTodos\", JSON.stringify(iTodos));\n    window.localStorage.setItem(\"cTodos\", JSON.stringify(cTodos));\n    window.localStorage.setItem(\"defaultTodos\", JSON.stringify(defaultTodos));\n  }, [todos, iTodos, cTodos, defaultTodos]);\n\n  /*-------------------------------------------render-------------------------------------------------------*/\n  return (\n    <Container title=\"What you wanna to do? ;)\">\n      {showModal && (\n        <Modal toggleModal={setShowModal}>\n          <ToDoForm\n            toggleModal={setShowModal}\n            onSubmit={onSubmit}\n            takeTodo={takeDefaultTodo}\n          />\n        </Modal>\n      )}\n\n      <button type=\"button\" onClick={setShowModal}>\n        Add todo\n      </button>\n\n      <Navigation />\n\n      <h3>TODOS</h3>\n\n      <Filter onChange={onFilterSearch} inputFilter={inputFilter} />\n\n      <Suspense fallback=\"Do not be so fast :)\">\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <ImportantToDosList\n                iTodos={getFilteredTD(iTodos)}\n                deleteTodo={deleteTodo}\n                removeTodo={removeToCompleted}\n              />\n            }\n          />\n\n          <Route\n            path=\"/daily\"\n            element={\n              <ToDosList\n                todos={getFilteredTD(todos)}\n                deleteTodo={deleteTodo}\n                removeTodo={removeToCompleted}\n              />\n            }\n          />\n\n          <Route\n            path=\"/completed\"\n            element={\n              <ComletedTodosList\n                cTodos={getFilteredTD(cTodos)}\n                deleteTodo={deleteTodo}\n                removeTodo={removeToCompleted}\n              />\n            }\n          />\n\n          <Route element={<p>sorry</p>} />\n        </Routes>\n      </Suspense>\n    </Container>\n  );\n}\n\n/*-----------------------------------variant of render without routes--------------------------*/\n/* <ImportantToDosList\n        iTodos={getFilteredITodos()}\n        deleteTodo={deleteTodo}\n        removeTodo={removeToCompleted}\n      />\n      <ToDosList\n        todos={getFilteredTodos()}\n        deleteTodo={deleteTodo}\n        removeTodo={removeToCompleted}\n      />\n      <ComletedTodosList\n        cTodos={cTodos}\n        deleteTodo={deleteTodo}\n        removeTodo={removeToCompleted}\n      /> */\n","import { useState } from \"react\";\n\nexport const useToggle = (initValue) => {\n  const [state, setState] = useState(initValue);\n  const toggle = () => {\n    setState((prev) => !prev);\n  };\n  return [state, toggle];\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}